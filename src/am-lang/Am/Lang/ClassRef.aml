namespace Am.Lang 
{
    native class PropertyInfo {
        private var name: String
        private var index: UByte
//        private var classRef: ClassRef

        fun getName(): String {
            return this.name
        }

        native fun getPropertyClassRef(): ClassRef

        // only Objects have properties, Any's don't.
        native fun getValue(target: Object): Any
        native fun setValue(target: Object, value: Any)
    }

    native class ClassRef 
    {
        import Am.Collections

        private var className: String
        private var properties: PropertyInfo[]
        private static var classRefs: HashMap<String, ClassRef> = new HashMap<String, ClassRef>()

        static fun getClassRef(name: String): ClassRef {
            return ClassRef.classRefs.get(name)
        }

        native static fun getClassRefFromAny(any: Any): ClassRef

        static fun registerClassRef(name: String, classRef: ClassRef) {
            ClassRef.classRefs.set(name, classRef)
        }

        fun getProperties(): PropertyInfo[] {
            return this.properties
        }

        fun getClassName(): String {
            return this.className
        }

        override fun toString(): String {
            return this.className
        }
    }
}
